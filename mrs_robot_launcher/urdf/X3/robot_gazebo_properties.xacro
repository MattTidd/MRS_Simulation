<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" xmlns:gz="http://gazebosim.org/schema">

    <!--            PROPERTIES          -->
    <xacro:property name = 'mu1' value = '0.1'/>
    <xacro:property name = 'mu2' value = '0.1'/>
    <xacro:property name = 'minDepth' value = '0.0001'/>
    <xacro:property name = 'kp' value = '1e8'/>
    <xacro:property name = 'kd' value = '7500'/>

    <!--            LINKS          -->

    <xacro:if value = "${capability == 'depth'}">
        <gazebo reference = '${prefix}_chassis_link'>
            <material>Gazebo/Blue</material>
        </gazebo>
    </xacro:if>

    <xacro:if value = "${capability == 'thermal'}">
        <gazebo reference = '${prefix}_chassis_link'>
            <material>Gazebo/Red</material>
        </gazebo>
    </xacro:if>

    <gazebo reference = '${prefix}_front_right_wheel_link'>
        <material>Gazebo/Black</material>
        <pose>0 0 0 0 0 0</pose>
        <mu1 value = '${mu1}' />
        <mu2 value = '${mu2}' />
        <fdir1 gz:expressed_in='${prefix}_base_link'>1 1 0</fdir1>
        <minDepth>${minDepth}</minDepth>
        <kp>${kp}</kp>
        <kd>${kd}</kd>
    </gazebo>

    <gazebo reference = '${prefix}_front_left_wheel_link'>
        <material>Gazebo/Black</material>
        <pose>0 0 0 0 0 0</pose>
        <mu1 value = '${mu1}' />
        <mu2 value = '${mu2}' />
        <fdir1 gz:expressed_in='${prefix}_base_link'>-1 1 0</fdir1>
        <minDepth>${minDepth}</minDepth>
        <kp>${kp}</kp>
        <kd>${kd}</kd>
    </gazebo>

    <gazebo reference = '${prefix}_back_right_wheel_link'>
        <material>Gazebo/Black</material>
        <pose>0 0 0 0 0 0</pose>
        <mu1 value = '${mu1}' />
        <mu2 value = '${mu2}' />
        <fdir1 gz:expressed_in='${prefix}_base_link'>1 -1 0</fdir1>
        <minDepth>${minDepth}</minDepth>
        <kp>${kp}</kp>
        <kd>${kd}</kd>
    </gazebo>

    <gazebo reference = '${prefix}_back_left_wheel_link'>
        <material>Gazebo/Black</material>
        <pose>0 0 0 0 0 0</pose>
        <mu1 value = '${mu1}' />
        <mu2 value = '${mu2}' />
        <fdir1 gz:expressed_in='${prefix}_base_link'>-1 -1 0</fdir1>
        <minDepth>${minDepth}</minDepth>
        <kp>${kp}</kp>
        <kd>${kd}</kd>
    </gazebo>

    <gazebo reference = '${prefix}_lidar_link'>
        <material>Gazebo/Black</material>
        <sensor name = 'lidar' type = 'ray'>
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>3200</samples>         <!-- 360 degrees divided by 0.1125 degree resolution -->
                        <resolution>1</resolution>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.05</min>
                    <max>30.0</max>
                </range>
            </ray>
            <plugin name = 'laser_controller' filename = 'libgazebo_ros_ray_sensor.so'>
                <ros>
                    <argument>--ros-args --remap ~/out:=${prefix}_scan</argument>
                    <namespace>${prefix}</namespace>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>${prefix}_lidar_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <!-- for depth camera -->
    <xacro:if value = "${capability == 'depth'}">
        <gazebo reference = '${prefix}_depth_camera_link'>
            <material>Gazebo/Black</material>
            <sensor name = 'depth_camera' type = 'depth'>
                <pose> 0 0 0 0 0 0 </pose>
                <visualize>true</visualize>
                <update_rate>10</update_rate>
                <camera>
                    <horizontal_fov>1.019272283</horizontal_fov>
                    <vertical_fov>0.7941248097</vertical_fov>
                    <image>
                        <format>R8G8B8</format>
                        <width>640</width>
                        <height>480</height>
                    </image>
                    <clip>
                        <near>0.1</near>
                        <far>8.0</far>
                    </clip>
                </camera>
                <plugin name = 'depth_camera_controller' filename = 'libgazebo_ros_camera.so'>
                    <frame_name>${prefix}_depth_camera_optical_link</frame_name>
                    <ros>
                        <namespace>${prefix}</namespace>
                    </ros>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:if>

    <!-- for thermal camera -->
    <xacro:if value = "${capability == 'thermal'}">
        <gazebo reference = '${prefix}_thermal_camera_link'>
            <material>Gazebo/Black</material>
            <sensor name = "thermal_cam" type = "camera">
                <pose>0 0 0 0 0 0</pose>
                <visualize>true</visualize>
                <update_rate>10</update_rate>
                <camera>
                    <horizontal_fov>0.8499753</horizontal_fov>
                    <vertical_fov>0.6736971</vertical_fov>
                    <image>
                        <format>R8G8B8</format>
                        <width>640</width>
                        <height>512</height>
                    </image>
                    <clip>
                        <near>0.1</near>
                        <far>8.0</far>
                    </clip>
                </camera>
                <plugin name = 'thermal_camera_controller' filename = 'libgazebo_ros_camera.so'>
                    <frame_name>${prefix}_thermal_camera_optical_link</frame_name>
                    <ros>
                        <namespace>${prefix}</namespace>
                    </ros>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:if>

    <!--            GAZEBO CONTROL           -->
    <gazebo>
        <plugin name = 'omni_robot_controller' filename = 'libgazebo_ros_omni_drive.so'>
            <!-- namespacing -->
            <ros>
                <namespace>${prefix}</namespace>
            </ros>

            <!-- frame names -->
            <!-- <commandTopic>cmd_vel</commandTopic> -->
            <!-- <odometryTopic>odom</odometryTopic> -->
            <odometry_frame>${prefix}_odom</odometry_frame>
            <odometry_rate>250.0</odometry_rate>
            <robot_base_frame>${prefix}_base_link</robot_base_frame>
            <publish_wheel_tf>true</publish_wheel_tf>

            <wheel_radius>0.0325</wheel_radius>
            <base_length>0.16</base_length>
            <base_width>0.1695</base_width>

            <front_right_joint>${prefix}_front_right_joint</front_right_joint>
            <front_left_joint>${prefix}_front_left_joint</front_left_joint>
            <rear_right_joint>${prefix}_back_right_joint</rear_right_joint>
            <rear_left_joint>${prefix}_back_left_joint</rear_left_joint>

            <wheel_max_speed>7.50</wheel_max_speed>
            <wheel_acceleration>7.50</wheel_acceleration>
            <joint_config>1 1 1 1</joint_config>
        </plugin>
    </gazebo>
</robot>